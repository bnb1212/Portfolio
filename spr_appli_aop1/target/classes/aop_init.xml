<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- 핵심 로직 : AOP 입장에서는 target class -->
	<bean id="mimpl" class="pack.MessageImpl">
		<property name="name" value="코형석"></property>
	</bean>
	
	<!-- Advice(Aspect)로 target 클래스에 weaving -->
	<bean id="loggingAdvice" class="other.LoggingAdvice"></bean>
	
	<!-- proxy를 통한 간접 접근 -->
	<bean id="proxy" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<ref bean="mimpl"/>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hiAdvisor</value>
			</list>
		</property>
		</bean>
		
		<!-- Advisor(Advice + pointcut) -->
		<bean id="hiAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
			<!-- advice -->
			<property name="advice" >
				<ref bean="loggingAdvice"/>
			</property>
			<!-- pointcut -->
			<property name="pointcut">
				<bean class="org.springframework.aop.support.JdkRegexpMethodPointcut">
					<property name="pattern">
						<!-- 리턴 값 상관없이 패키지에도 상관없이 (양옆 점) sayHi라고 시작하는 메서드 찾기 -->
						<value>.*sayHi*.</value>
					</property>
					</bean>
			</property>
		</bean>
</beans>
